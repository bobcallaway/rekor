//
// Copyright 2022 The Sigstore Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.4
// source: rekor_entries.proto

package entries

import (
	hashedrekord "github.com/sigstore/rekor/pkg/generated/protobuf/types/hashedrekord"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ProposedEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Type:
	//	*ProposedEntry_HashedRekord
	Type isProposedEntry_Type `protobuf_oneof:"Type"`
}

func (x *ProposedEntry) Reset() {
	*x = ProposedEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rekor_entries_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProposedEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProposedEntry) ProtoMessage() {}

func (x *ProposedEntry) ProtoReflect() protoreflect.Message {
	mi := &file_rekor_entries_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProposedEntry.ProtoReflect.Descriptor instead.
func (*ProposedEntry) Descriptor() ([]byte, []int) {
	return file_rekor_entries_proto_rawDescGZIP(), []int{0}
}

func (m *ProposedEntry) GetType() isProposedEntry_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *ProposedEntry) GetHashedRekord() *hashedrekord.ProposedEntry {
	if x, ok := x.GetType().(*ProposedEntry_HashedRekord); ok {
		return x.HashedRekord
	}
	return nil
}

type isProposedEntry_Type interface {
	isProposedEntry_Type()
}

type ProposedEntry_HashedRekord struct {
	//        RekordProposedEntry rekord = 1;
	HashedRekord *hashedrekord.ProposedEntry `protobuf:"bytes,1,opt,name=hashedRekord,proto3,oneof"`
}

func (*ProposedEntry_HashedRekord) isProposedEntry_Type() {}

type CreateEntryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProposedEntry *ProposedEntry `protobuf:"bytes,1,opt,name=proposedEntry,proto3" json:"proposedEntry,omitempty"`
}

func (x *CreateEntryRequest) Reset() {
	*x = CreateEntryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rekor_entries_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateEntryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateEntryRequest) ProtoMessage() {}

func (x *CreateEntryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rekor_entries_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateEntryRequest.ProtoReflect.Descriptor instead.
func (*CreateEntryRequest) Descriptor() ([]byte, []int) {
	return file_rekor_entries_proto_rawDescGZIP(), []int{1}
}

func (x *CreateEntryRequest) GetProposedEntry() *ProposedEntry {
	if x != nil {
		return x.ProposedEntry
	}
	return nil
}

type EntryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid           string        `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	LogID          string        `protobuf:"bytes,2,opt,name=logID,proto3" json:"logID,omitempty"`
	LogIndex       uint64        `protobuf:"varint,3,opt,name=logIndex,proto3" json:"logIndex,omitempty"`
	IntegratedTime uint64        `protobuf:"varint,4,opt,name=integratedTime,proto3" json:"integratedTime,omitempty"`
	Attestation    []byte        `protobuf:"bytes,5,opt,name=attestation,proto3" json:"attestation,omitempty"`
	Verification   *Verification `protobuf:"bytes,6,opt,name=verification,proto3" json:"verification,omitempty"`
	// Types that are assignable to Body:
	//	*EntryResponse_HashedRekord
	Body isEntryResponse_Body `protobuf_oneof:"body"`
}

func (x *EntryResponse) Reset() {
	*x = EntryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rekor_entries_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntryResponse) ProtoMessage() {}

func (x *EntryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rekor_entries_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntryResponse.ProtoReflect.Descriptor instead.
func (*EntryResponse) Descriptor() ([]byte, []int) {
	return file_rekor_entries_proto_rawDescGZIP(), []int{2}
}

func (x *EntryResponse) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *EntryResponse) GetLogID() string {
	if x != nil {
		return x.LogID
	}
	return ""
}

func (x *EntryResponse) GetLogIndex() uint64 {
	if x != nil {
		return x.LogIndex
	}
	return 0
}

func (x *EntryResponse) GetIntegratedTime() uint64 {
	if x != nil {
		return x.IntegratedTime
	}
	return 0
}

func (x *EntryResponse) GetAttestation() []byte {
	if x != nil {
		return x.Attestation
	}
	return nil
}

func (x *EntryResponse) GetVerification() *Verification {
	if x != nil {
		return x.Verification
	}
	return nil
}

func (m *EntryResponse) GetBody() isEntryResponse_Body {
	if m != nil {
		return m.Body
	}
	return nil
}

func (x *EntryResponse) GetHashedRekord() *hashedrekord.Entry {
	if x, ok := x.GetBody().(*EntryResponse_HashedRekord); ok {
		return x.HashedRekord
	}
	return nil
}

type isEntryResponse_Body interface {
	isEntryResponse_Body()
}

type EntryResponse_HashedRekord struct {
	//        RekordEntry rekord = 7;
	HashedRekord *hashedrekord.Entry `protobuf:"bytes,7,opt,name=hashedRekord,proto3,oneof"`
}

func (*EntryResponse_HashedRekord) isEntryResponse_Body() {}

type Verification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InclusionProof       *InclusionProof `protobuf:"bytes,1,opt,name=inclusionProof,proto3" json:"inclusionProof,omitempty"`
	SignedEntryTimestamp []byte          `protobuf:"bytes,2,opt,name=signedEntryTimestamp,proto3" json:"signedEntryTimestamp,omitempty"`
}

func (x *Verification) Reset() {
	*x = Verification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rekor_entries_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Verification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Verification) ProtoMessage() {}

func (x *Verification) ProtoReflect() protoreflect.Message {
	mi := &file_rekor_entries_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Verification.ProtoReflect.Descriptor instead.
func (*Verification) Descriptor() ([]byte, []int) {
	return file_rekor_entries_proto_rawDescGZIP(), []int{3}
}

func (x *Verification) GetInclusionProof() *InclusionProof {
	if x != nil {
		return x.InclusionProof
	}
	return nil
}

func (x *Verification) GetSignedEntryTimestamp() []byte {
	if x != nil {
		return x.SignedEntryTimestamp
	}
	return nil
}

type InclusionProof struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LogIndex uint64   `protobuf:"varint,1,opt,name=logIndex,proto3" json:"logIndex,omitempty"`
	RootHash string   `protobuf:"bytes,2,opt,name=rootHash,proto3" json:"rootHash,omitempty"`
	TreeSize uint64   `protobuf:"varint,3,opt,name=treeSize,proto3" json:"treeSize,omitempty"`
	Hashes   []string `protobuf:"bytes,4,rep,name=hashes,proto3" json:"hashes,omitempty"`
}

func (x *InclusionProof) Reset() {
	*x = InclusionProof{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rekor_entries_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InclusionProof) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InclusionProof) ProtoMessage() {}

func (x *InclusionProof) ProtoReflect() protoreflect.Message {
	mi := &file_rekor_entries_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InclusionProof.ProtoReflect.Descriptor instead.
func (*InclusionProof) Descriptor() ([]byte, []int) {
	return file_rekor_entries_proto_rawDescGZIP(), []int{4}
}

func (x *InclusionProof) GetLogIndex() uint64 {
	if x != nil {
		return x.LogIndex
	}
	return 0
}

func (x *InclusionProof) GetRootHash() string {
	if x != nil {
		return x.RootHash
	}
	return ""
}

func (x *InclusionProof) GetTreeSize() uint64 {
	if x != nil {
		return x.TreeSize
	}
	return 0
}

func (x *InclusionProof) GetHashes() []string {
	if x != nil {
		return x.Hashes
	}
	return nil
}

type SearchLogRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuids      []string         `protobuf:"bytes,1,rep,name=uuids,proto3" json:"uuids,omitempty"`
	LogIndexes []uint64         `protobuf:"varint,2,rep,packed,name=logIndexes,proto3" json:"logIndexes,omitempty"`
	Entries    []*ProposedEntry `protobuf:"bytes,3,rep,name=entries,proto3" json:"entries,omitempty"`
}

func (x *SearchLogRequest) Reset() {
	*x = SearchLogRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rekor_entries_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchLogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchLogRequest) ProtoMessage() {}

func (x *SearchLogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rekor_entries_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchLogRequest.ProtoReflect.Descriptor instead.
func (*SearchLogRequest) Descriptor() ([]byte, []int) {
	return file_rekor_entries_proto_rawDescGZIP(), []int{5}
}

func (x *SearchLogRequest) GetUuids() []string {
	if x != nil {
		return x.Uuids
	}
	return nil
}

func (x *SearchLogRequest) GetLogIndexes() []uint64 {
	if x != nil {
		return x.LogIndexes
	}
	return nil
}

func (x *SearchLogRequest) GetEntries() []*ProposedEntry {
	if x != nil {
		return x.Entries
	}
	return nil
}

type SearchLogResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*EntryResponse `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
}

func (x *SearchLogResponse) Reset() {
	*x = SearchLogResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rekor_entries_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchLogResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchLogResponse) ProtoMessage() {}

func (x *SearchLogResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rekor_entries_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchLogResponse.ProtoReflect.Descriptor instead.
func (*SearchLogResponse) Descriptor() ([]byte, []int) {
	return file_rekor_entries_proto_rawDescGZIP(), []int{6}
}

func (x *SearchLogResponse) GetResults() []*EntryResponse {
	if x != nil {
		return x.Results
	}
	return nil
}

var File_rekor_entries_proto protoreflect.FileDescriptor

var file_rekor_entries_proto_rawDesc = []byte{
	0x0a, 0x13, 0x72, 0x65, 0x6b, 0x6f, 0x72, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x12, 0x64, 0x65, 0x76, 0x2e, 0x73, 0x69, 0x67, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x2e, 0x72, 0x65, 0x6b, 0x6f, 0x72, 0x1a, 0x2e, 0x70, 0x6b, 0x67, 0x2f, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x2f, 0x68, 0x61, 0x73, 0x68, 0x65, 0x64, 0x72, 0x65, 0x6b, 0x6f, 0x72,
	0x64, 0x2f, 0x68, 0x61, 0x73, 0x68, 0x65, 0x64, 0x72, 0x65, 0x6b, 0x6f, 0x72, 0x64, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x73, 0x0a, 0x0d, 0x50, 0x72, 0x6f,
	0x70, 0x6f, 0x73, 0x65, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x5a, 0x0a, 0x0c, 0x68, 0x61,
	0x73, 0x68, 0x65, 0x64, 0x52, 0x65, 0x6b, 0x6f, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x34, 0x2e, 0x64, 0x65, 0x76, 0x2e, 0x73, 0x69, 0x67, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e,
	0x72, 0x65, 0x6b, 0x6f, 0x72, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x68, 0x61, 0x73, 0x68,
	0x65, 0x64, 0x72, 0x65, 0x6b, 0x6f, 0x72, 0x64, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65,
	0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x48, 0x00, 0x52, 0x0c, 0x68, 0x61, 0x73, 0x68, 0x65, 0x64,
	0x52, 0x65, 0x6b, 0x6f, 0x72, 0x64, 0x42, 0x06, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x22, 0x5d,
	0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x47, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x64,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x64, 0x65,
	0x76, 0x2e, 0x73, 0x69, 0x67, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x72, 0x65, 0x6b, 0x6f, 0x72,
	0x2e, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0d,
	0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x22, 0xc1, 0x02,
	0x0a, 0x0d, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75,
	0x75, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x6f, 0x67, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x6c, 0x6f, 0x67, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x67,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x6c, 0x6f, 0x67,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x26, 0x0a, 0x0e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61,
	0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x69,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x61, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x0b, 0x61, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x44, 0x0a, 0x0c, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x64, 0x65, 0x76, 0x2e, 0x73, 0x69, 0x67, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x2e, 0x72, 0x65, 0x6b, 0x6f, 0x72, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x52, 0x0a, 0x0c, 0x68, 0x61, 0x73, 0x68, 0x65, 0x64, 0x52,
	0x65, 0x6b, 0x6f, 0x72, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x64, 0x65,
	0x76, 0x2e, 0x73, 0x69, 0x67, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x72, 0x65, 0x6b, 0x6f, 0x72,
	0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x65, 0x64, 0x72, 0x65, 0x6b,
	0x6f, 0x72, 0x64, 0x2e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x48, 0x00, 0x52, 0x0c, 0x68, 0x61, 0x73,
	0x68, 0x65, 0x64, 0x52, 0x65, 0x6b, 0x6f, 0x72, 0x64, 0x42, 0x06, 0x0a, 0x04, 0x62, 0x6f, 0x64,
	0x79, 0x22, 0x8e, 0x01, 0x0a, 0x0c, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x4a, 0x0a, 0x0e, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x6f, 0x6e, 0x50,
	0x72, 0x6f, 0x6f, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x64, 0x65, 0x76,
	0x2e, 0x73, 0x69, 0x67, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x72, 0x65, 0x6b, 0x6f, 0x72, 0x2e,
	0x49, 0x6e, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x52, 0x0e,
	0x69, 0x6e, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x12, 0x32,
	0x0a, 0x14, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x14, 0x73, 0x69,
	0x67, 0x6e, 0x65, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x22, 0x7c, 0x0a, 0x0e, 0x49, 0x6e, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x6f, 0x6e, 0x50,
	0x72, 0x6f, 0x6f, 0x66, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x67, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x6c, 0x6f, 0x67, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x12, 0x1a, 0x0a, 0x08, 0x72, 0x6f, 0x6f, 0x74, 0x48, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x72, 0x6f, 0x6f, 0x74, 0x48, 0x61, 0x73, 0x68, 0x12, 0x1a, 0x0a, 0x08,
	0x74, 0x72, 0x65, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08,
	0x74, 0x72, 0x65, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x61, 0x73, 0x68,
	0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x68, 0x61, 0x73, 0x68, 0x65, 0x73,
	0x22, 0x85, 0x01, 0x0a, 0x10, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4c, 0x6f, 0x67, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x75, 0x75, 0x69, 0x64, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x75, 0x75, 0x69, 0x64, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x6c,
	0x6f, 0x67, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x04, 0x52,
	0x0a, 0x6c, 0x6f, 0x67, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x12, 0x3b, 0x0a, 0x07, 0x65,
	0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x64,
	0x65, 0x76, 0x2e, 0x73, 0x69, 0x67, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x72, 0x65, 0x6b, 0x6f,
	0x72, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x22, 0x50, 0x0a, 0x11, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a,
	0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x64, 0x65, 0x76, 0x2e, 0x73, 0x69, 0x67, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x72, 0x65,
	0x6b, 0x6f, 0x72, 0x2e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x32, 0x68, 0x0a, 0x0c, 0x52, 0x65,
	0x6b, 0x6f, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x12, 0x58, 0x0a, 0x0b, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x26, 0x2e, 0x64, 0x65, 0x76, 0x2e,
	0x73, 0x69, 0x67, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x72, 0x65, 0x6b, 0x6f, 0x72, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x21, 0x2e, 0x64, 0x65, 0x76, 0x2e, 0x73, 0x69, 0x67, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x2e, 0x72, 0x65, 0x6b, 0x6f, 0x72, 0x2e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x42, 0x3a, 0x5a, 0x38, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x73, 0x69, 0x67, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2f, 0x72, 0x65, 0x6b, 0x6f,
	0x72, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_rekor_entries_proto_rawDescOnce sync.Once
	file_rekor_entries_proto_rawDescData = file_rekor_entries_proto_rawDesc
)

func file_rekor_entries_proto_rawDescGZIP() []byte {
	file_rekor_entries_proto_rawDescOnce.Do(func() {
		file_rekor_entries_proto_rawDescData = protoimpl.X.CompressGZIP(file_rekor_entries_proto_rawDescData)
	})
	return file_rekor_entries_proto_rawDescData
}

var file_rekor_entries_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_rekor_entries_proto_goTypes = []interface{}{
	(*ProposedEntry)(nil),              // 0: dev.sigstore.rekor.ProposedEntry
	(*CreateEntryRequest)(nil),         // 1: dev.sigstore.rekor.CreateEntryRequest
	(*EntryResponse)(nil),              // 2: dev.sigstore.rekor.EntryResponse
	(*Verification)(nil),               // 3: dev.sigstore.rekor.Verification
	(*InclusionProof)(nil),             // 4: dev.sigstore.rekor.InclusionProof
	(*SearchLogRequest)(nil),           // 5: dev.sigstore.rekor.SearchLogRequest
	(*SearchLogResponse)(nil),          // 6: dev.sigstore.rekor.SearchLogResponse
	(*hashedrekord.ProposedEntry)(nil), // 7: dev.sigstore.rekor.types.hashedrekord.ProposedEntry
	(*hashedrekord.Entry)(nil),         // 8: dev.sigstore.rekor.types.hashedrekord.Entry
}
var file_rekor_entries_proto_depIdxs = []int32{
	7, // 0: dev.sigstore.rekor.ProposedEntry.hashedRekord:type_name -> dev.sigstore.rekor.types.hashedrekord.ProposedEntry
	0, // 1: dev.sigstore.rekor.CreateEntryRequest.proposedEntry:type_name -> dev.sigstore.rekor.ProposedEntry
	3, // 2: dev.sigstore.rekor.EntryResponse.verification:type_name -> dev.sigstore.rekor.Verification
	8, // 3: dev.sigstore.rekor.EntryResponse.hashedRekord:type_name -> dev.sigstore.rekor.types.hashedrekord.Entry
	4, // 4: dev.sigstore.rekor.Verification.inclusionProof:type_name -> dev.sigstore.rekor.InclusionProof
	0, // 5: dev.sigstore.rekor.SearchLogRequest.entries:type_name -> dev.sigstore.rekor.ProposedEntry
	2, // 6: dev.sigstore.rekor.SearchLogResponse.results:type_name -> dev.sigstore.rekor.EntryResponse
	1, // 7: dev.sigstore.rekor.RekorEntries.CreateEntry:input_type -> dev.sigstore.rekor.CreateEntryRequest
	2, // 8: dev.sigstore.rekor.RekorEntries.CreateEntry:output_type -> dev.sigstore.rekor.EntryResponse
	8, // [8:9] is the sub-list for method output_type
	7, // [7:8] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_rekor_entries_proto_init() }
func file_rekor_entries_proto_init() {
	if File_rekor_entries_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_rekor_entries_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProposedEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rekor_entries_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateEntryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rekor_entries_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EntryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rekor_entries_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Verification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rekor_entries_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InclusionProof); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rekor_entries_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchLogRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rekor_entries_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchLogResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_rekor_entries_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*ProposedEntry_HashedRekord)(nil),
	}
	file_rekor_entries_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*EntryResponse_HashedRekord)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_rekor_entries_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_rekor_entries_proto_goTypes,
		DependencyIndexes: file_rekor_entries_proto_depIdxs,
		MessageInfos:      file_rekor_entries_proto_msgTypes,
	}.Build()
	File_rekor_entries_proto = out.File
	file_rekor_entries_proto_rawDesc = nil
	file_rekor_entries_proto_goTypes = nil
	file_rekor_entries_proto_depIdxs = nil
}
