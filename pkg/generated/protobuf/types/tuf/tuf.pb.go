//
// Copyright 2022 The Sigstore Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.12.4
// source: pkg/types/tuf/tuf.proto

package tuf

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

//
// ProposedTUFMetadata represents the structure of the message required to present to Rekor
// to make an entry of the TUFMetadata type.
type ProposedTUFMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//
	// TUF metadata
	Metadata []byte `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	//
	// TUF root (containing public keys used to verify signed metadata)
	RootMetadata []byte `protobuf:"bytes,2,opt,name=root_metadata,json=rootMetadata,proto3" json:"root_metadata,omitempty"`
}

func (x *ProposedTUFMetadata) Reset() {
	*x = ProposedTUFMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_types_tuf_tuf_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProposedTUFMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProposedTUFMetadata) ProtoMessage() {}

func (x *ProposedTUFMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_types_tuf_tuf_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProposedTUFMetadata.ProtoReflect.Descriptor instead.
func (*ProposedTUFMetadata) Descriptor() ([]byte, []int) {
	return file_pkg_types_tuf_tuf_proto_rawDescGZIP(), []int{0}
}

func (x *ProposedTUFMetadata) GetMetadata() []byte {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *ProposedTUFMetadata) GetRootMetadata() []byte {
	if x != nil {
		return x.RootMetadata
	}
	return nil
}

//
// TUFMetadata represents the structure of the entry persisted in the transparency log for
// the TUFMetadata type.
type TUFMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//
	// TUF specification version
	SpecVersion string `protobuf:"bytes,1,opt,name=spec_version,json=specVersion,proto3" json:"spec_version,omitempty"`
	//
	// TUF metadata (expressed as canonicalized JSON per RFC8785)
	Metadata []byte `protobuf:"bytes,2,opt,name=metadata,proto3" json:"metadata,omitempty"`
	//
	// TUF root (containing public keys used to verify signed metadata, expressed as canonicalized JSON per RFC8785)
	RootMetadata []byte `protobuf:"bytes,3,opt,name=root_metadata,json=rootMetadata,proto3" json:"root_metadata,omitempty"`
}

func (x *TUFMetadata) Reset() {
	*x = TUFMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_types_tuf_tuf_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TUFMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TUFMetadata) ProtoMessage() {}

func (x *TUFMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_types_tuf_tuf_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TUFMetadata.ProtoReflect.Descriptor instead.
func (*TUFMetadata) Descriptor() ([]byte, []int) {
	return file_pkg_types_tuf_tuf_proto_rawDescGZIP(), []int{1}
}

func (x *TUFMetadata) GetSpecVersion() string {
	if x != nil {
		return x.SpecVersion
	}
	return ""
}

func (x *TUFMetadata) GetMetadata() []byte {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *TUFMetadata) GetRootMetadata() []byte {
	if x != nil {
		return x.RootMetadata
	}
	return nil
}

var File_pkg_types_tuf_tuf_proto protoreflect.FileDescriptor

var file_pkg_types_tuf_tuf_proto_rawDesc = []byte{
	0x0a, 0x17, 0x70, 0x6b, 0x67, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x74, 0x75, 0x66, 0x2f,
	0x74, 0x75, 0x66, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1f, 0x64, 0x65, 0x76, 0x2e, 0x73,
	0x69, 0x67, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x72, 0x65, 0x6b, 0x6f, 0x72, 0x2e, 0x76, 0x32,
	0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x74, 0x75, 0x66, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x62, 0x65, 0x68,
	0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x60, 0x0a, 0x13, 0x50,
	0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x64, 0x54, 0x55, 0x46, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x1f, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0c, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x28, 0x0a, 0x0d, 0x72, 0x6f, 0x6f, 0x74, 0x5f, 0x6d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52,
	0x0c, 0x72, 0x6f, 0x6f, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0x71, 0x0a,
	0x0b, 0x54, 0x55, 0x46, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x21, 0x0a, 0x0c,
	0x73, 0x70, 0x65, 0x63, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x73, 0x70, 0x65, 0x63, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x23, 0x0a, 0x0d, 0x72,
	0x6f, 0x6f, 0x74, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x0c, 0x72, 0x6f, 0x6f, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x42, 0x6e, 0x0a, 0x1f, 0x64, 0x65, 0x76, 0x2e, 0x73, 0x69, 0x67, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x2e, 0x72, 0x65, 0x6b, 0x6f, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e,
	0x74, 0x75, 0x66, 0x42, 0x0d, 0x52, 0x65, 0x6b, 0x6f, 0x72, 0x54, 0x55, 0x46, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x50, 0x01, 0x5a, 0x3a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x73, 0x69, 0x67, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2f, 0x72, 0x65, 0x6b, 0x6f, 0x72, 0x2f,
	0x70, 0x6b, 0x67, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x74, 0x75, 0x66,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pkg_types_tuf_tuf_proto_rawDescOnce sync.Once
	file_pkg_types_tuf_tuf_proto_rawDescData = file_pkg_types_tuf_tuf_proto_rawDesc
)

func file_pkg_types_tuf_tuf_proto_rawDescGZIP() []byte {
	file_pkg_types_tuf_tuf_proto_rawDescOnce.Do(func() {
		file_pkg_types_tuf_tuf_proto_rawDescData = protoimpl.X.CompressGZIP(file_pkg_types_tuf_tuf_proto_rawDescData)
	})
	return file_pkg_types_tuf_tuf_proto_rawDescData
}

var file_pkg_types_tuf_tuf_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_pkg_types_tuf_tuf_proto_goTypes = []interface{}{
	(*ProposedTUFMetadata)(nil), // 0: dev.sigstore.rekor.v2.types.tuf.ProposedTUFMetadata
	(*TUFMetadata)(nil),         // 1: dev.sigstore.rekor.v2.types.tuf.TUFMetadata
}
var file_pkg_types_tuf_tuf_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_pkg_types_tuf_tuf_proto_init() }
func file_pkg_types_tuf_tuf_proto_init() {
	if File_pkg_types_tuf_tuf_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pkg_types_tuf_tuf_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProposedTUFMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_types_tuf_tuf_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TUFMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pkg_types_tuf_tuf_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pkg_types_tuf_tuf_proto_goTypes,
		DependencyIndexes: file_pkg_types_tuf_tuf_proto_depIdxs,
		MessageInfos:      file_pkg_types_tuf_tuf_proto_msgTypes,
	}.Build()
	File_pkg_types_tuf_tuf_proto = out.File
	file_pkg_types_tuf_tuf_proto_rawDesc = nil
	file_pkg_types_tuf_tuf_proto_goTypes = nil
	file_pkg_types_tuf_tuf_proto_depIdxs = nil
}
