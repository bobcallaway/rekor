//
// Copyright 2022 The Sigstore Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.12.4
// source: pkg/types/alpine/v0.0.1/alpine.proto

package v001

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

//
// AlpinePackage represents the structure of the message required to present to Rekor
// to make an entry of the AlpinePackage type, AND also the structure of the message
// as persisted in the transparency log
type AlpinePackage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Deprecated: Do not use.
	PublicKey *AlpinePackage_PublicKey `protobuf:"bytes,1,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	// Deprecated: Do not use.
	Package *AlpinePackage_Package `protobuf:"bytes,2,opt,name=package,proto3" json:"package,omitempty"`
}

func (x *AlpinePackage) Reset() {
	*x = AlpinePackage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_types_alpine_v0_0_1_alpine_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlpinePackage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlpinePackage) ProtoMessage() {}

func (x *AlpinePackage) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_types_alpine_v0_0_1_alpine_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlpinePackage.ProtoReflect.Descriptor instead.
func (*AlpinePackage) Descriptor() ([]byte, []int) {
	return file_pkg_types_alpine_v0_0_1_alpine_proto_rawDescGZIP(), []int{0}
}

// Deprecated: Do not use.
func (x *AlpinePackage) GetPublicKey() *AlpinePackage_PublicKey {
	if x != nil {
		return x.PublicKey
	}
	return nil
}

// Deprecated: Do not use.
func (x *AlpinePackage) GetPackage() *AlpinePackage_Package {
	if x != nil {
		return x.Package
	}
	return nil
}

//
// Digital signature and public key
type AlpinePackage_PublicKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Content []byte `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *AlpinePackage_PublicKey) Reset() {
	*x = AlpinePackage_PublicKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_types_alpine_v0_0_1_alpine_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlpinePackage_PublicKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlpinePackage_PublicKey) ProtoMessage() {}

func (x *AlpinePackage_PublicKey) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_types_alpine_v0_0_1_alpine_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlpinePackage_PublicKey.ProtoReflect.Descriptor instead.
func (*AlpinePackage_PublicKey) Descriptor() ([]byte, []int) {
	return file_pkg_types_alpine_v0_0_1_alpine_proto_rawDescGZIP(), []int{0, 0}
}

func (x *AlpinePackage_PublicKey) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

//
// Alpine package (that contains embedded signature)
type AlpinePackage_Package struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//
	// map of key/value pairs from .PKGINFO file
	Pkginfo map[string]string           `protobuf:"bytes,1,rep,name=pkginfo,proto3" json:"pkginfo,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Hash    *AlpinePackage_Package_Hash `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
	//
	// Content of alpine package; this is not persisted into the log
	Content []byte `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *AlpinePackage_Package) Reset() {
	*x = AlpinePackage_Package{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_types_alpine_v0_0_1_alpine_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlpinePackage_Package) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlpinePackage_Package) ProtoMessage() {}

func (x *AlpinePackage_Package) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_types_alpine_v0_0_1_alpine_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlpinePackage_Package.ProtoReflect.Descriptor instead.
func (*AlpinePackage_Package) Descriptor() ([]byte, []int) {
	return file_pkg_types_alpine_v0_0_1_alpine_proto_rawDescGZIP(), []int{0, 1}
}

func (x *AlpinePackage_Package) GetPkginfo() map[string]string {
	if x != nil {
		return x.Pkginfo
	}
	return nil
}

func (x *AlpinePackage_Package) GetHash() *AlpinePackage_Package_Hash {
	if x != nil {
		return x.Hash
	}
	return nil
}

func (x *AlpinePackage_Package) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

//
// Hash over entire alpine package
type AlpinePackage_Package_Hash struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Algorithm string `protobuf:"bytes,1,opt,name=algorithm,proto3" json:"algorithm,omitempty"`
	Value     string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *AlpinePackage_Package_Hash) Reset() {
	*x = AlpinePackage_Package_Hash{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_types_alpine_v0_0_1_alpine_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlpinePackage_Package_Hash) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlpinePackage_Package_Hash) ProtoMessage() {}

func (x *AlpinePackage_Package_Hash) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_types_alpine_v0_0_1_alpine_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlpinePackage_Package_Hash.ProtoReflect.Descriptor instead.
func (*AlpinePackage_Package_Hash) Descriptor() ([]byte, []int) {
	return file_pkg_types_alpine_v0_0_1_alpine_proto_rawDescGZIP(), []int{0, 1, 1}
}

func (x *AlpinePackage_Package_Hash) GetAlgorithm() string {
	if x != nil {
		return x.Algorithm
	}
	return ""
}

func (x *AlpinePackage_Package_Hash) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

var File_pkg_types_alpine_v0_0_1_alpine_proto protoreflect.FileDescriptor

var file_pkg_types_alpine_v0_0_1_alpine_proto_rawDesc = []byte{
	0x0a, 0x24, 0x70, 0x6b, 0x67, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x61, 0x6c, 0x70, 0x69,
	0x6e, 0x65, 0x2f, 0x76, 0x30, 0x2e, 0x30, 0x2e, 0x31, 0x2f, 0x61, 0x6c, 0x70, 0x69, 0x6e, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x24, 0x64, 0x65, 0x76, 0x2e, 0x73, 0x69, 0x67, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x2e, 0x72, 0x65, 0x6b, 0x6f, 0x72, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x2e, 0x61, 0x6c, 0x70, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x30, 0x30, 0x31, 0x1a, 0x1f, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x62,
	0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd1, 0x04,
	0x0a, 0x0d, 0x41, 0x6c, 0x70, 0x69, 0x6e, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x12,
	0x63, 0x0a, 0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x64, 0x65, 0x76, 0x2e, 0x73, 0x69, 0x67, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x2e, 0x72, 0x65, 0x6b, 0x6f, 0x72, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x61,
	0x6c, 0x70, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x30, 0x30, 0x31, 0x2e, 0x41, 0x6c, 0x70, 0x69, 0x6e,
	0x65, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b,
	0x65, 0x79, 0x42, 0x05, 0x18, 0x01, 0xe0, 0x41, 0x02, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x4b, 0x65, 0x79, 0x12, 0x5c, 0x0a, 0x07, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x64, 0x65, 0x76, 0x2e, 0x73, 0x69, 0x67, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x2e, 0x72, 0x65, 0x6b, 0x6f, 0x72, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x2e, 0x61, 0x6c, 0x70, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x30, 0x30, 0x31, 0x2e, 0x41, 0x6c, 0x70,
	0x69, 0x6e, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x61,
	0x67, 0x65, 0x42, 0x05, 0x18, 0x01, 0xe0, 0x41, 0x02, 0x52, 0x07, 0x70, 0x61, 0x63, 0x6b, 0x61,
	0x67, 0x65, 0x1a, 0x25, 0x0a, 0x09, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x1a, 0xd5, 0x02, 0x0a, 0x07, 0x50, 0x61,
	0x63, 0x6b, 0x61, 0x67, 0x65, 0x12, 0x62, 0x0a, 0x07, 0x70, 0x6b, 0x67, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x48, 0x2e, 0x64, 0x65, 0x76, 0x2e, 0x73, 0x69, 0x67,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x72, 0x65, 0x6b, 0x6f, 0x72, 0x2e, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2e, 0x61, 0x6c, 0x70, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x30, 0x30, 0x31, 0x2e, 0x41, 0x6c,
	0x70, 0x69, 0x6e, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x2e, 0x50, 0x61, 0x63, 0x6b,
	0x61, 0x67, 0x65, 0x2e, 0x50, 0x6b, 0x67, 0x69, 0x6e, 0x66, 0x6f, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x07, 0x70, 0x6b, 0x67, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x54, 0x0a, 0x04, 0x68, 0x61, 0x73,
	0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x64, 0x65, 0x76, 0x2e, 0x73, 0x69,
	0x67, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x72, 0x65, 0x6b, 0x6f, 0x72, 0x2e, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2e, 0x61, 0x6c, 0x70, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x30, 0x30, 0x31, 0x2e, 0x41,
	0x6c, 0x70, 0x69, 0x6e, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x2e, 0x50, 0x61, 0x63,
	0x6b, 0x61, 0x67, 0x65, 0x2e, 0x48, 0x61, 0x73, 0x68, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x1a, 0x3a, 0x0a, 0x0c, 0x50, 0x6b, 0x67,
	0x69, 0x6e, 0x66, 0x6f, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x3a, 0x0a, 0x04, 0x48, 0x61, 0x73, 0x68, 0x12, 0x1c, 0x0a,
	0x09, 0x61, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x61, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x42, 0x7d, 0x0a, 0x24, 0x64, 0x65, 0x76, 0x2e, 0x73, 0x69, 0x67, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x2e, 0x72, 0x65, 0x6b, 0x6f, 0x72, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x61, 0x6c,
	0x70, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x30, 0x30, 0x31, 0x42, 0x0f, 0x41, 0x6c, 0x70, 0x69, 0x6e,
	0x65, 0x56, 0x30, 0x30, 0x31, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x42, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x69, 0x67, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x2f, 0x72, 0x65, 0x6b, 0x6f, 0x72, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x67, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x64, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x2f, 0x61, 0x6c, 0x70, 0x69, 0x6e, 0x65, 0x2f, 0x76, 0x30, 0x30, 0x31,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pkg_types_alpine_v0_0_1_alpine_proto_rawDescOnce sync.Once
	file_pkg_types_alpine_v0_0_1_alpine_proto_rawDescData = file_pkg_types_alpine_v0_0_1_alpine_proto_rawDesc
)

func file_pkg_types_alpine_v0_0_1_alpine_proto_rawDescGZIP() []byte {
	file_pkg_types_alpine_v0_0_1_alpine_proto_rawDescOnce.Do(func() {
		file_pkg_types_alpine_v0_0_1_alpine_proto_rawDescData = protoimpl.X.CompressGZIP(file_pkg_types_alpine_v0_0_1_alpine_proto_rawDescData)
	})
	return file_pkg_types_alpine_v0_0_1_alpine_proto_rawDescData
}

var file_pkg_types_alpine_v0_0_1_alpine_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_pkg_types_alpine_v0_0_1_alpine_proto_goTypes = []interface{}{
	(*AlpinePackage)(nil),              // 0: dev.sigstore.rekor.types.alpine.v001.AlpinePackage
	(*AlpinePackage_PublicKey)(nil),    // 1: dev.sigstore.rekor.types.alpine.v001.AlpinePackage.PublicKey
	(*AlpinePackage_Package)(nil),      // 2: dev.sigstore.rekor.types.alpine.v001.AlpinePackage.Package
	nil,                                // 3: dev.sigstore.rekor.types.alpine.v001.AlpinePackage.Package.PkginfoEntry
	(*AlpinePackage_Package_Hash)(nil), // 4: dev.sigstore.rekor.types.alpine.v001.AlpinePackage.Package.Hash
}
var file_pkg_types_alpine_v0_0_1_alpine_proto_depIdxs = []int32{
	1, // 0: dev.sigstore.rekor.types.alpine.v001.AlpinePackage.public_key:type_name -> dev.sigstore.rekor.types.alpine.v001.AlpinePackage.PublicKey
	2, // 1: dev.sigstore.rekor.types.alpine.v001.AlpinePackage.package:type_name -> dev.sigstore.rekor.types.alpine.v001.AlpinePackage.Package
	3, // 2: dev.sigstore.rekor.types.alpine.v001.AlpinePackage.Package.pkginfo:type_name -> dev.sigstore.rekor.types.alpine.v001.AlpinePackage.Package.PkginfoEntry
	4, // 3: dev.sigstore.rekor.types.alpine.v001.AlpinePackage.Package.hash:type_name -> dev.sigstore.rekor.types.alpine.v001.AlpinePackage.Package.Hash
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_pkg_types_alpine_v0_0_1_alpine_proto_init() }
func file_pkg_types_alpine_v0_0_1_alpine_proto_init() {
	if File_pkg_types_alpine_v0_0_1_alpine_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pkg_types_alpine_v0_0_1_alpine_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlpinePackage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_types_alpine_v0_0_1_alpine_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlpinePackage_PublicKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_types_alpine_v0_0_1_alpine_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlpinePackage_Package); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_types_alpine_v0_0_1_alpine_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlpinePackage_Package_Hash); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pkg_types_alpine_v0_0_1_alpine_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pkg_types_alpine_v0_0_1_alpine_proto_goTypes,
		DependencyIndexes: file_pkg_types_alpine_v0_0_1_alpine_proto_depIdxs,
		MessageInfos:      file_pkg_types_alpine_v0_0_1_alpine_proto_msgTypes,
	}.Build()
	File_pkg_types_alpine_v0_0_1_alpine_proto = out.File
	file_pkg_types_alpine_v0_0_1_alpine_proto_rawDesc = nil
	file_pkg_types_alpine_v0_0_1_alpine_proto_goTypes = nil
	file_pkg_types_alpine_v0_0_1_alpine_proto_depIdxs = nil
}
