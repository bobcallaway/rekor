//
// Copyright 2022 The Sigstore Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.12.4
// source: pkg/types/alpine/alpine.proto

package alpine

import (
	v1 "github.com/sigstore/rekor/pkg/generated/protobuf/types/alpine/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

//
// ProposedAlpinePackage represents the structure of the message required to present to Rekor
// to make an entry of the AlpinePackage type.
type ProposedAlpinePackage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to ProposedAlpinePackage:
	//	*ProposedAlpinePackage_ProposedAlpinePackageV1
	ProposedAlpinePackage isProposedAlpinePackage_ProposedAlpinePackage `protobuf_oneof:"proposed_alpine_package"`
}

func (x *ProposedAlpinePackage) Reset() {
	*x = ProposedAlpinePackage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_types_alpine_alpine_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProposedAlpinePackage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProposedAlpinePackage) ProtoMessage() {}

func (x *ProposedAlpinePackage) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_types_alpine_alpine_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProposedAlpinePackage.ProtoReflect.Descriptor instead.
func (*ProposedAlpinePackage) Descriptor() ([]byte, []int) {
	return file_pkg_types_alpine_alpine_proto_rawDescGZIP(), []int{0}
}

func (m *ProposedAlpinePackage) GetProposedAlpinePackage() isProposedAlpinePackage_ProposedAlpinePackage {
	if m != nil {
		return m.ProposedAlpinePackage
	}
	return nil
}

func (x *ProposedAlpinePackage) GetProposedAlpinePackageV1() *v1.ProposedAlpinePackage {
	if x, ok := x.GetProposedAlpinePackage().(*ProposedAlpinePackage_ProposedAlpinePackageV1); ok {
		return x.ProposedAlpinePackageV1
	}
	return nil
}

type isProposedAlpinePackage_ProposedAlpinePackage interface {
	isProposedAlpinePackage_ProposedAlpinePackage()
}

type ProposedAlpinePackage_ProposedAlpinePackageV1 struct {
	ProposedAlpinePackageV1 *v1.ProposedAlpinePackage `protobuf:"bytes,1,opt,name=proposed_alpine_package_v1,json=proposedAlpinePackageV1,proto3,oneof"`
}

func (*ProposedAlpinePackage_ProposedAlpinePackageV1) isProposedAlpinePackage_ProposedAlpinePackage() {
}

//
// AlpinePackage represents the structure of the entry persisted in the transparency log for
// the AlpinePackage type.
type AlpinePackage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to AlpinePackage:
	//	*AlpinePackage_AlpinePackageV1
	AlpinePackage isAlpinePackage_AlpinePackage `protobuf_oneof:"alpine_package"`
}

func (x *AlpinePackage) Reset() {
	*x = AlpinePackage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_types_alpine_alpine_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlpinePackage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlpinePackage) ProtoMessage() {}

func (x *AlpinePackage) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_types_alpine_alpine_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlpinePackage.ProtoReflect.Descriptor instead.
func (*AlpinePackage) Descriptor() ([]byte, []int) {
	return file_pkg_types_alpine_alpine_proto_rawDescGZIP(), []int{1}
}

func (m *AlpinePackage) GetAlpinePackage() isAlpinePackage_AlpinePackage {
	if m != nil {
		return m.AlpinePackage
	}
	return nil
}

func (x *AlpinePackage) GetAlpinePackageV1() *v1.AlpinePackage {
	if x, ok := x.GetAlpinePackage().(*AlpinePackage_AlpinePackageV1); ok {
		return x.AlpinePackageV1
	}
	return nil
}

type isAlpinePackage_AlpinePackage interface {
	isAlpinePackage_AlpinePackage()
}

type AlpinePackage_AlpinePackageV1 struct {
	AlpinePackageV1 *v1.AlpinePackage `protobuf:"bytes,1,opt,name=alpine_package_v1,json=alpinePackageV1,proto3,oneof"`
}

func (*AlpinePackage_AlpinePackageV1) isAlpinePackage_AlpinePackage() {}

var File_pkg_types_alpine_alpine_proto protoreflect.FileDescriptor

var file_pkg_types_alpine_alpine_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x70, 0x6b, 0x67, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x61, 0x6c, 0x70, 0x69,
	0x6e, 0x65, 0x2f, 0x61, 0x6c, 0x70, 0x69, 0x6e, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x1f, 0x64, 0x65, 0x76, 0x2e, 0x73, 0x69, 0x67, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x72, 0x65,
	0x6b, 0x6f, 0x72, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x61, 0x6c, 0x70, 0x69, 0x6e, 0x65,
	0x1a, 0x20, 0x70, 0x6b, 0x67, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x61, 0x6c, 0x70, 0x69,
	0x6e, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x6c, 0x70, 0x69, 0x6e, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xac, 0x01, 0x0a, 0x15, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x64, 0x41,
	0x6c, 0x70, 0x69, 0x6e, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x12, 0x78, 0x0a, 0x1a,
	0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x64, 0x5f, 0x61, 0x6c, 0x70, 0x69, 0x6e, 0x65, 0x5f,
	0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f, 0x76, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x39, 0x2e, 0x64, 0x65, 0x76, 0x2e, 0x73, 0x69, 0x67, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e,
	0x72, 0x65, 0x6b, 0x6f, 0x72, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x61, 0x6c, 0x70, 0x69,
	0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x64, 0x41, 0x6c,
	0x70, 0x69, 0x6e, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x17, 0x70,
	0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x64, 0x41, 0x6c, 0x70, 0x69, 0x6e, 0x65, 0x50, 0x61, 0x63,
	0x6b, 0x61, 0x67, 0x65, 0x56, 0x31, 0x42, 0x19, 0x0a, 0x17, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73,
	0x65, 0x64, 0x5f, 0x61, 0x6c, 0x70, 0x69, 0x6e, 0x65, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67,
	0x65, 0x22, 0x82, 0x01, 0x0a, 0x0d, 0x41, 0x6c, 0x70, 0x69, 0x6e, 0x65, 0x50, 0x61, 0x63, 0x6b,
	0x61, 0x67, 0x65, 0x12, 0x5f, 0x0a, 0x11, 0x61, 0x6c, 0x70, 0x69, 0x6e, 0x65, 0x5f, 0x70, 0x61,
	0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f, 0x76, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31,
	0x2e, 0x64, 0x65, 0x76, 0x2e, 0x73, 0x69, 0x67, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x72, 0x65,
	0x6b, 0x6f, 0x72, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x61, 0x6c, 0x70, 0x69, 0x6e, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6c, 0x70, 0x69, 0x6e, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67,
	0x65, 0x48, 0x00, 0x52, 0x0f, 0x61, 0x6c, 0x70, 0x69, 0x6e, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x61,
	0x67, 0x65, 0x56, 0x31, 0x42, 0x10, 0x0a, 0x0e, 0x61, 0x6c, 0x70, 0x69, 0x6e, 0x65, 0x5f, 0x70,
	0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x42, 0x6f, 0x0a, 0x1f, 0x64, 0x65, 0x76, 0x2e, 0x73, 0x69,
	0x67, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x72, 0x65, 0x6b, 0x6f, 0x72, 0x2e, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2e, 0x61, 0x6c, 0x70, 0x69, 0x6e, 0x65, 0x42, 0x0b, 0x41, 0x6c, 0x70, 0x69, 0x6e,
	0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x3d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x69, 0x67, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2f, 0x72, 0x65,
	0x6b, 0x6f, 0x72, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65,
	0x64, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x2f, 0x61, 0x6c, 0x70, 0x69, 0x6e, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pkg_types_alpine_alpine_proto_rawDescOnce sync.Once
	file_pkg_types_alpine_alpine_proto_rawDescData = file_pkg_types_alpine_alpine_proto_rawDesc
)

func file_pkg_types_alpine_alpine_proto_rawDescGZIP() []byte {
	file_pkg_types_alpine_alpine_proto_rawDescOnce.Do(func() {
		file_pkg_types_alpine_alpine_proto_rawDescData = protoimpl.X.CompressGZIP(file_pkg_types_alpine_alpine_proto_rawDescData)
	})
	return file_pkg_types_alpine_alpine_proto_rawDescData
}

var file_pkg_types_alpine_alpine_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_pkg_types_alpine_alpine_proto_goTypes = []interface{}{
	(*ProposedAlpinePackage)(nil),    // 0: dev.sigstore.rekor.types.alpine.ProposedAlpinePackage
	(*AlpinePackage)(nil),            // 1: dev.sigstore.rekor.types.alpine.AlpinePackage
	(*v1.ProposedAlpinePackage)(nil), // 2: dev.sigstore.rekor.types.alpine.v1.ProposedAlpinePackage
	(*v1.AlpinePackage)(nil),         // 3: dev.sigstore.rekor.types.alpine.v1.AlpinePackage
}
var file_pkg_types_alpine_alpine_proto_depIdxs = []int32{
	2, // 0: dev.sigstore.rekor.types.alpine.ProposedAlpinePackage.proposed_alpine_package_v1:type_name -> dev.sigstore.rekor.types.alpine.v1.ProposedAlpinePackage
	3, // 1: dev.sigstore.rekor.types.alpine.AlpinePackage.alpine_package_v1:type_name -> dev.sigstore.rekor.types.alpine.v1.AlpinePackage
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_pkg_types_alpine_alpine_proto_init() }
func file_pkg_types_alpine_alpine_proto_init() {
	if File_pkg_types_alpine_alpine_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pkg_types_alpine_alpine_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProposedAlpinePackage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_types_alpine_alpine_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlpinePackage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_pkg_types_alpine_alpine_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*ProposedAlpinePackage_ProposedAlpinePackageV1)(nil),
	}
	file_pkg_types_alpine_alpine_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*AlpinePackage_AlpinePackageV1)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pkg_types_alpine_alpine_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pkg_types_alpine_alpine_proto_goTypes,
		DependencyIndexes: file_pkg_types_alpine_alpine_proto_depIdxs,
		MessageInfos:      file_pkg_types_alpine_alpine_proto_msgTypes,
	}.Build()
	File_pkg_types_alpine_alpine_proto = out.File
	file_pkg_types_alpine_alpine_proto_rawDesc = nil
	file_pkg_types_alpine_alpine_proto_goTypes = nil
	file_pkg_types_alpine_alpine_proto_depIdxs = nil
}
